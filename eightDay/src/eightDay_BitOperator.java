public class eightDay_BitOperator {
    public static void main(String[] args) {
        //看推导过程
        //1. 先得到2的补码 => 2的原码 00000000 00000000 00000000 00000010
        //   2的补码 00000000 00000000 00000000 00000010
        //2. 3的补码 3的原码 00000000 0000000 00000000 00000011
        //   3的补码 00000000 0000000 00000000 00000011
        //3. 按位与&
        //   00000000 00000000 00000000 00000010
        //   00000000 00000000 00000000 00000011
        //   00000000 00000000 00000000 00000010 & 运算后的补码
        //   结果为2
        System.out.println(2 & 3);
        //4. 按位或|
        //   00000000 00000000 00000000 00000010
        //   00000000 00000000 00000000 00000011
        //   00000000 00000000 00000000 00000011 | 运算后的补码
        //   结果为3
        System.out.println(2 | 3);
        //5. 按位异或^
        //   00000000 00000000 00000000 00000010
        //   00000000 00000000 00000000 00000011
        //   00000000 00000000 00000000 00000001 ^ 运算后的结果
        //   结果为1
        System.out.println(2 ^ 3);
        //6. 按位取反
        //先得到-2的原码   10000000 00000000 00000000 00000010
        //-2的反码   11111111 11111111 11111111 11111101
        //-2的补码   11111111 11111111 11111111 11111110
        //~-2操作    00000000 00000000 00000000 00000001
        //运算后的原码 就是 00000000 00000000 00000000 00000001 => 1
        System.out.println(~-2);
        //得到2的原码 00000000 00000000 00000000 00000010
        //2的补码    00000000 00000000 00000000 00000010
        //~2操作     11111111 11111111 11111111 11111101 运算后的补码
        //运算后的原码 00000000 00000000 00000000 00000011 => 3
        System.out.println(~2);
    }
}
